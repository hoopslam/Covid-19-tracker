[{"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\index.js":"1","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\reportWebVitals.js":"2","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\App.jsx":"3","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\MapComponent.jsx":"4","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\CountrySummary.jsx":"5","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\ChangeView.jsx":"6","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\util.js":"7","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\Loader.jsx":"8","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\LoadedApp.jsx":"9","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\CountrySelector.jsx":"10","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\TypeSelector.jsx":"11","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\Footer.jsx":"12","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\BarGraph.jsx":"13","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\SearchBar.jsx":"14","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\Selectors.jsx":"15","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\SelectedApp.jsx":"16","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\InfoCard.jsx":"17","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\Donut.jsx":"18","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\HistoricalGraph.jsx":"19"},{"size":500,"mtime":1612689611420,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":1502,"mtime":1613987777747,"results":"23","hashOfConfig":"21"},{"size":981,"mtime":1613728751531,"results":"24","hashOfConfig":"21"},{"size":3360,"mtime":1613847715771,"results":"25","hashOfConfig":"21"},{"size":180,"mtime":1613370412435,"results":"26","hashOfConfig":"21"},{"size":1959,"mtime":1613805511868,"results":"27","hashOfConfig":"21"},{"size":173,"mtime":1612955025365,"results":"28","hashOfConfig":"21"},{"size":4024,"mtime":1613835957470,"results":"29","hashOfConfig":"21"},{"size":697,"mtime":1612955703217,"results":"30","hashOfConfig":"21"},{"size":1159,"mtime":1613836458470,"results":"31","hashOfConfig":"21"},{"size":530,"mtime":1613644538673,"results":"32","hashOfConfig":"21"},{"size":2351,"mtime":1613845010595,"results":"33","hashOfConfig":"21"},{"size":1868,"mtime":1613222315767,"results":"34","hashOfConfig":"21"},{"size":560,"mtime":1613500181611,"results":"35","hashOfConfig":"21"},{"size":827,"mtime":1613835936324,"results":"36","hashOfConfig":"21"},{"size":453,"mtime":1613496737734,"results":"37","hashOfConfig":"21"},{"size":240,"mtime":1613593836414,"results":"38","hashOfConfig":"21"},{"size":3224,"mtime":1613847252315,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"4z1obx",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\index.js",[],["81","82"],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\reportWebVitals.js",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\App.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\MapComponent.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\CountrySummary.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\ChangeView.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\util.js",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\Loader.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\LoadedApp.jsx",["83"],"import React, { useState, useEffect } from \"react\";\r\nimport Loader from \"./Loader\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport SelectedApp from \"./SelectedApp\";\r\nimport Selectors from \"./Selectors\";\r\nimport MapComponent from \"./MapComponent\";\r\n\r\nconst LoadedApp = ({ globalData, countryNames }) => {\r\n\tconst [selectedCountry, setSelectedCountry] = useState(\"Worldwide\");\r\n\tconst [selectedDataType, setSelectedDataType] = useState({\r\n\t\ttext: \"Active Cases\",\r\n\t\tdataType: \"active\",\r\n\t});\r\n\tconst [selectedDataTypeData, setSelectedDataTypeData] = useState();\r\n\tconst [selectedCountryInfo, setSelectedCountryInfo] = useState();\r\n\r\n\tuseEffect(() => {\r\n\t\tmakeCountryInfo(\"Worldwide\");\r\n\t\tmakeDataTypeData(selectedDataType);\r\n\t}, []);\r\n\r\n\t//Called in typeChangeHandler.  Fires up whenever a new data type is selected\r\n\tconst makeDataTypeData = (selectedType) => {\r\n\t\tlet countriesDetailArray = globalData.countries.map((country) => {\r\n\t\t\tlet countryObject = {\r\n\t\t\t\tcountry: country.country,\r\n\t\t\t\tflag: country.countryInfo.flag,\r\n\t\t\t\tid: country.countryInfo._id,\r\n\t\t\t\tiso2: country.countryInfo.iso2,\r\n\t\t\t\tiso3: country.countryInfo.iso3,\r\n\t\t\t\tlat: country.countryInfo.lat,\r\n\t\t\t\tlng: country.countryInfo.long,\r\n\t\t\t\tcat: selectedType.dataType,\r\n\t\t\t\ttext: selectedType.text,\r\n\t\t\t}\r\n\t\t\tcountry[selectedType.dataType] ? countryObject.typeValue = country[selectedType.dataType]\r\n\t\t\t\t:countryObject.typeValue = 0;  //Some countries do not have vaccine data, so 0 is placed as value if datatype is vaccine\r\n\t\t\t\r\n\t\t\tif(selectedType.dataType !== 'countriesVaccine'){\r\n\t\t\t\treturn countryObject;\r\n\t\t\t} else { //It is data type countriesVaccine\r\n\t\t\t\tlet countryVacData = globalData.countriesVaccine.find((vacCountry) => vacCountry.country === country.country) //check if country has vaccine data\r\n\t\t\t\tcountryVacData && (countryObject.typeValue = Object.values(countryVacData.timeline)[0]) //country has vaccine data, push into typeValue\r\n\t\t\t\treturn countryObject;\r\n\t\t\t}\r\n\t\t})\r\n\t\tsetSelectedDataTypeData(countriesDetailArray)\r\n\t};\r\n\r\n\t//Called in CountryChangeHandler.  Fires up whenever a new country is selected\r\n\tconst makeCountryInfo = (selectedCountry) => {\r\n\t\tselectedCountry === \"Worldwide\"\r\n\t\t\t? setSelectedCountryInfo(globalData.world)\r\n\t\t\t: setSelectedCountryInfo(\r\n\t\t\t\t\tglobalData.countries.find((country) => country.country === selectedCountry)\r\n\t\t\t  );\r\n\t};\r\n\r\n\tconst countryChangeHandler = (selectedCountry) => {\r\n\t\tsetSelectedCountry(selectedCountry);\r\n\t\tmakeCountryInfo(selectedCountry);\r\n\t};\r\n\r\n\tconst typeChangeHandler = (selectedType) => {\r\n\t\tlet data = {\r\n\t\t\ttext: selectedType.target.innerText,\r\n\t\t\tdataType: selectedType.target.dataset.value,\r\n\t\t};\r\n\t\tsetSelectedDataType(data);\r\n\t\tmakeDataTypeData(data);\r\n\t};\r\n\tif (!selectedDataTypeData || !selectedCountryInfo) {\r\n\t\treturn (\r\n\t\t\t<div className='Loader-container'>\r\n\t\t\t\t<Loader />\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div className='Loaded-app'>\r\n\t\t\t\t<header className='LoadedApp-header'>\r\n\t\t\t\t\t<h1>Global Covid-19 Tracker</h1>\r\n\t\t\t\t\t<Selectors\r\n\t\t\t\t\t\tcountryChangeHandler={countryChangeHandler}\r\n\t\t\t\t\t\tcountryNames={countryNames}\r\n\t\t\t\t\t\tselectedCountry={selectedCountry}\r\n\t\t\t\t\t\tselectedDataType={selectedDataType}\r\n\t\t\t\t\t\ttypeChangeHandler={typeChangeHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className='map-container'>\r\n\t\t\t\t\t\t<MapComponent\r\n\t\t\t\t\t\t\tselectedDataTypeData={selectedDataTypeData}\r\n\t\t\t\t\t\t\tmapCenter={{\r\n\t\t\t\t\t\t\t\tlat: selectedCountryInfo.countryInfo.lat,\r\n\t\t\t\t\t\t\t\tlng: selectedCountryInfo.countryInfo.long,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tselectedCountry={selectedCountry}\r\n\t\t\t\t\t\t\tcountryChangeHandler={countryChangeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</header>\r\n\t\t\t\t<SelectedApp\r\n\t\t\t\t\tselectedDataTypeData={selectedDataTypeData}\r\n\t\t\t\t\tselectedCountryInfo={selectedCountryInfo}\r\n\t\t\t\t\tselectedCountry={selectedCountry}\r\n\t\t\t\t\tselectedDataType={selectedDataType}\r\n\t\t\t\t\tcountryChangeHandler={countryChangeHandler}\r\n\t\t\t\t\ttypeChangeHandler={typeChangeHandler}\r\n\t\t\t\t\tworldData={globalData.world[selectedDataType.dataType]}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default LoadedApp;\r\n","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\CountrySelector.jsx",[],["84","85"],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\TypeSelector.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\Footer.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\BarGraph.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\SearchBar.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\Selectors.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\SelectedApp.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\InfoCard.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\Donut.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\HistoricalGraph.jsx",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":20,"column":5,"nodeType":"92","endLine":20,"endColumn":7,"suggestions":"93"},{"ruleId":"86","replacedBy":"94"},{"ruleId":"88","replacedBy":"95"},"no-native-reassign",["96"],"no-negated-in-lhs",["97"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'makeCountryInfo', 'makeDataTypeData', and 'selectedDataType'. Either include them or remove the dependency array.","ArrayExpression",["98"],["96"],["97"],"no-global-assign","no-unsafe-negation",{"desc":"99","fix":"100"},"Update the dependencies array to be: [makeCountryInfo, makeDataTypeData, selectedDataType]",{"range":"101","text":"102"},[724,726],"[makeCountryInfo, makeDataTypeData, selectedDataType]"]