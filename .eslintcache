[{"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\index.js":"1","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\reportWebVitals.js":"2","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\App.jsx":"3","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\MapComponent.jsx":"4","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\CountrySummary.jsx":"5","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\ChangeView.jsx":"6","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\util.js":"7","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\Loader.jsx":"8","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\LoadedApp.jsx":"9","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\CountrySelector.jsx":"10","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\TypeSelector.jsx":"11","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\Footer.jsx":"12","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\BarGraph.jsx":"13","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\SearchBar.jsx":"14","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\Selectors.jsx":"15","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\SelectedApp.jsx":"16","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\InfoCard.jsx":"17","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\Donut.jsx":"18"},{"size":500,"mtime":1612689611420,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"20"},{"size":1122,"mtime":1613293757485,"results":"22","hashOfConfig":"20"},{"size":981,"mtime":1613507095260,"results":"23","hashOfConfig":"20"},{"size":4158,"mtime":1613591942228,"results":"24","hashOfConfig":"20"},{"size":180,"mtime":1613370412435,"results":"25","hashOfConfig":"20"},{"size":1809,"mtime":1613500563987,"results":"26","hashOfConfig":"20"},{"size":173,"mtime":1612955025365,"results":"27","hashOfConfig":"20"},{"size":3322,"mtime":1613568266367,"results":"28","hashOfConfig":"20"},{"size":697,"mtime":1612955703217,"results":"29","hashOfConfig":"20"},{"size":1647,"mtime":1613500584701,"results":"30","hashOfConfig":"20"},{"size":515,"mtime":1613501910996,"results":"31","hashOfConfig":"20"},{"size":2217,"mtime":1613562305948,"results":"32","hashOfConfig":"20"},{"size":1868,"mtime":1613222315767,"results":"33","hashOfConfig":"20"},{"size":560,"mtime":1613500181611,"results":"34","hashOfConfig":"20"},{"size":761,"mtime":1613568255253,"results":"35","hashOfConfig":"20"},{"size":453,"mtime":1613496737734,"results":"36","hashOfConfig":"20"},{"size":299,"mtime":1613591942226,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"4z1obx",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\index.js",[],["78","79"],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\reportWebVitals.js",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\App.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\MapComponent.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\CountrySummary.jsx",["80"],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\ChangeView.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\util.js",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\Loader.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\LoadedApp.jsx",["81"],"import React, { useState, useEffect } from \"react\";\r\nimport Loader from \"./Loader\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport SelectedApp from \"./SelectedApp\";\r\nimport Selectors from \"./Selectors\";\r\nimport MapComponent from \"./MapComponent\";\r\n\r\nconst LoadedApp = ({ globalData, countryNames }) => {\r\n\tconst [selectedCountry, setSelectedCountry] = useState(\"Worldwide\");\r\n\tconst [selectedDataType, setSelectedDataType] = useState({\r\n\t\ttext: \"Active Cases\",\r\n\t\tdataType: \"active\",\r\n\t});\r\n\tconst [selectedDataTypeData, setSelectedDataTypeData] = useState();\r\n\tconst [selectedCountryInfo, setSelectedCountryInfo] = useState();\r\n\r\n\tuseEffect(() => {\r\n\t\tmakeCountryInfo(\"Worldwide\");\r\n\t\tmakeDataTypeData(selectedDataType);\r\n\t}, []);\r\n\r\n\t//Called in typeChangeHandler.  Fires up whenever a new data type is selected\r\n\tconst makeDataTypeData = (selectedType) => {\r\n\t\tsetSelectedDataTypeData(\r\n\t\t\tglobalData.countries.map((country) => ({\r\n\t\t\t\tcountry: country.country,\r\n\t\t\t\tflag: country.countryInfo.flag,\r\n\t\t\t\tid: country.countryInfo._id,\r\n\t\t\t\tiso2: country.countryInfo.iso2,\r\n\t\t\t\tiso3: country.countryInfo.iso3,\r\n\t\t\t\tlat: country.countryInfo.lat,\r\n\t\t\t\tlng: country.countryInfo.long,\r\n\t\t\t\tcat: selectedType.dataType,\r\n\t\t\t\ttext: selectedType.text,\r\n\t\t\t\ttypeValue: country[selectedType.dataType],\r\n\t\t\t}))\r\n\t\t);\r\n\t};\r\n\r\n\t//Called in CountryChangeHandler.  Fires up whenever a new country is selected\r\n\tconst makeCountryInfo = (selectedCountry) => {\r\n\t\tselectedCountry === \"Worldwide\"\r\n\t\t\t? setSelectedCountryInfo(globalData.world)\r\n\t\t\t: setSelectedCountryInfo(\r\n\t\t\t\t\tglobalData.countries.find((country) => country.country === selectedCountry)\r\n\t\t\t  );\r\n\t};\r\n\r\n\tconst countryChangeHandler = (selectedCountry) => {\r\n\t\tsetSelectedCountry(selectedCountry);\r\n\t\tmakeCountryInfo(selectedCountry);\r\n\t};\r\n\r\n\tconst typeChangeHandler = (selectedType) => {\r\n\t\tlet data = {\r\n\t\t\ttext: selectedType.target.innerText,\r\n\t\t\tdataType: selectedType.target.dataset.value,\r\n\t\t};\r\n\t\tsetSelectedDataType(data);\r\n\t\tmakeDataTypeData(data);\r\n\t};\r\n\tif (!selectedDataTypeData || !selectedCountryInfo) {\r\n\t\treturn (\r\n\t\t\t<div className='Loader-container'>\r\n\t\t\t\t<Loader />\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div className='Loaded-app'>\r\n\t\t\t\t<header className='LoadedApp-header'>\r\n\t\t\t\t\t<h1 onClick={() => countryChangeHandler(\"Worldwide\")}>Covid-19 Tracker</h1>\r\n\t\t\t\t\t<div className='map-container'>\r\n\t\t\t\t\t\t<MapComponent\r\n\t\t\t\t\t\t\tselectedDataTypeData={selectedDataTypeData}\r\n\t\t\t\t\t\t\tmapCenter={{\r\n\t\t\t\t\t\t\t\tlat: selectedCountryInfo.countryInfo.lat,\r\n\t\t\t\t\t\t\t\tlng: selectedCountryInfo.countryInfo.long,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tselectedCountry={selectedCountry}\r\n\t\t\t\t\t\t\tcountryChangeHandler={countryChangeHandler}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<Selectors\r\n\t\t\t\t\t\tcountryChangeHandler={countryChangeHandler}\r\n\t\t\t\t\t\tcountryNames={countryNames}\r\n\t\t\t\t\t\tselectedCountry={selectedCountry}\r\n\t\t\t\t\t\tselectedDataType={selectedDataType}\r\n\t\t\t\t\t\ttypeChangeHandler={typeChangeHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</header>\r\n\t\t\t\t<SelectedApp\r\n\t\t\t\t\tselectedDataTypeData={selectedDataTypeData}\r\n\t\t\t\t\tselectedCountryInfo={selectedCountryInfo}\r\n\t\t\t\t\tselectedCountry={selectedCountry}\r\n\t\t\t\t\tselectedDataType={selectedDataType}\r\n\t\t\t\t\tcountryChangeHandler={countryChangeHandler}\r\n\t\t\t\t\tworldData={globalData.world[selectedDataType.dataType]}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\n\r\nexport default LoadedApp;\r\n","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\CountrySelector.jsx",[],["82","83"],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\TypeSelector.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\Footer.jsx",["84"],"import React from \"react\";\r\n\r\nconst Footer = () => {\r\n\treturn (\r\n\t\t<div className='Footer'>\r\n\t\t\t<div className='Footer-container'>\r\n\t\t\t\t<p>Covid-19 data sourced from Worldometers & Johns Hopkins University</p>\r\n\t\t\t\t<p>\r\n\t\t\t\tProvided by <a href='http://www.disease.sh'target=\"_blank\">disease.sh</a>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>Website developed by David Cho &copy; 2021</p>\r\n\t\t\t\t<p>\r\n\t\t\t\t\tReach me @ <a href='mailto:hoopslam@gmail.com'>hoopslam@gmail.com</a>\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Footer;\r\n","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\BarGraph.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\SearchBar.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\Selectors.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\SelectedApp.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\InfoCard.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\Donut.jsx",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":4,"column":8,"nodeType":"91","messageId":"92","endLine":4,"endColumn":15},{"ruleId":"93","severity":1,"message":"94","line":20,"column":5,"nodeType":"95","endLine":20,"endColumn":7,"suggestions":"96"},{"ruleId":"85","replacedBy":"97"},{"ruleId":"87","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":9,"column":17,"nodeType":"101","endLine":9,"endColumn":64},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'numeral' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'makeCountryInfo', 'makeDataTypeData', and 'selectedDataType'. Either include them or remove the dependency array.","ArrayExpression",["104"],["102"],["103"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"105","fix":"106"},"Update the dependencies array to be: [makeCountryInfo, makeDataTypeData, selectedDataType]",{"range":"107","text":"108"},[724,726],"[makeCountryInfo, makeDataTypeData, selectedDataType]"]