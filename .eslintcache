[{"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\index.js":"1","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\reportWebVitals.js":"2","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\App.jsx":"3","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\Searchbox.jsx":"4","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\DropMenu.jsx":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"7"},{"size":2528,"mtime":1610563692155,"results":"9","hashOfConfig":"7"},{"size":713,"mtime":1610549377714,"results":"10","hashOfConfig":"7"},{"size":650,"mtime":1610422954221,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"4z1obx",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\index.js",[],["25","26"],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\reportWebVitals.js",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\App.jsx",["27"],"import './App.css';\nimport { useState, useEffect } from \"react\";\nimport Searchbox from \"./Components/Searchbox\";\nimport DropMenu from \"./Components/DropMenu\";\n\nfunction App() {\n\n  const [countriesData, setCountriesData] = useState([]);\n  const [worldData, setWorldData] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState();\n  const [countriesNames, setCountriesNames] = useState([]);\n  const [filteredCountries, setFilteredCountries] = useState([]);\n  \n  useEffect(() => {  // On pageload, fetch yesterday's data and set in state\n    fetch(\"https://disease.sh/v3/covid-19/countries?yesterday=true\")\n      .then(response => response.json())\n      .then(data => setCountriesData(data))\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then(response => response.json())\n      .then(data => setWorldData(data))\n  },[]);\n\n  useEffect(() => {\n    setCountriesNames(countriesData.map(country => country.country));\n  }, [countriesData])\n\n  // useEffect(() => {  rerender ui whenever selected country changes\n\n  // }, [selectedCountry])\n\n  const onSearchChange = (e) => {\n    console.log(e)\n    switch(e.key) {\n      case \"Enter\":\n        setSelectedCountry(filteredCountries[0])\n        break;\n      case \"ArrowDown\":\n        setSelectedCountry(filteredCountries[1])\n        break;\n      case \"ArrowUp\":\n        setSelectedCountry(filteredCountries[0])\n        break;\n      default:\n        setFilteredCountries(\n          countriesNames.filter(country => {\n            return country.toLowerCase().startsWith(e.target.value)\n          })) \n    }\n    // if(e.key === \"Enter\"){\n    //   setSelectedCountry(filteredCountries[0])\n    // }\n    console.log(selectedCountry)\n      // setFilteredCountries(\n      //   countriesNames.filter(country => {\n      //     return country.toLowerCase().startsWith(e.target.value)\n      //   })) \n  }\n\n  const onSelectedCountryChange = (selected) => {\n    setSelectedCountry(selected.target.innerText)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"App_title\">Covid-19 Tracker</h1>\n        <nav className=\"App-nav\">\n          <Searchbox \n            searchChange={onSearchChange} \n            filteredCountries={filteredCountries}\n            selectChange={onSelectedCountryChange}/>\n          <DropMenu \n            countryNames={countriesNames} \n            selectedCountry={selectedCountry} \n            selectChange={onSelectedCountryChange}/>\n        </nav>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\Searchbox.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\DropMenu.jsx",[],["28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":9,"column":10,"nodeType":"36","messageId":"37","endLine":9,"endColumn":19},{"ruleId":"30","replacedBy":"38"},{"ruleId":"32","replacedBy":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'worldData' is assigned a value but never used.","Identifier","unusedVar",["40"],["41"],"no-global-assign","no-unsafe-negation"]