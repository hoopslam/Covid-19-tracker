[{"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\index.js":"1","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\reportWebVitals.js":"2","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\App.jsx":"3","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\Searchbox.jsx":"4","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\DropMenu.jsx":"5","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\DataType.jsx":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":2781,"mtime":1610701042005,"results":"10","hashOfConfig":"8"},{"size":713,"mtime":1610549377714,"results":"11","hashOfConfig":"8"},{"size":650,"mtime":1610422954221,"results":"12","hashOfConfig":"8"},{"size":1663,"mtime":1610707363569,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"4z1obx",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\index.js",[],["28","29"],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\reportWebVitals.js",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\App.jsx",["30","31"],"import './App.css';\nimport { useState, useEffect } from \"react\";\nimport Searchbox from \"./Components/Searchbox\";\nimport DropMenu from \"./Components/DropMenu\";\nimport DataType from \"./Components/DataType\";\n\nfunction App() {\n\n  const [countriesData, setCountriesData] = useState([]);\n  const [worldData, setWorldData] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState();\n  const [countriesNames, setCountriesNames] = useState([]);\n  const [filteredCountries, setFilteredCountries] = useState([]);\n  const [selectedType, setSelectedType] = useState([\"todayCases\"]);\n  \n  useEffect(() => {  // On pageload, fetch yesterday's data and set in state\n    fetch(\"https://disease.sh/v3/covid-19/countries?yesterday=true\")\n      .then(response => response.json())\n      .then(data => setCountriesData(data))\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then(response => response.json())\n      .then(data => setWorldData(data))\n  },[]);\n\n  useEffect(() => {  // Once countriesData is fetched, set countriesNames with fresh data.\n    setCountriesNames(countriesData.map(country => country.country));\n  }, [countriesData])\n\n  // useEffect(() => {  rerender ui whenever selected country changes\n\n  const onSearchChange = (e) => {\n    if (e.key === \"Enter\") {  //set Selected country to whatever was at the top of the filtered search result\n      setSelectedCountry(filteredCountries[0])\n      setFilteredCountries([])  //reset filteredCountries after enter is pressed\n    } else {\n    setFilteredCountries(\n      countriesNames.filter(country => {\n        return country.toLowerCase().startsWith(e.target.value.toLowerCase())  //filter based on beginning letters\n      })\n    )} \n  }\n\n  const onSelectedCountryChange = (selected) => {\n    setSelectedCountry(selected.target.innerText)\n  }\n\n  const onSelectedTypeChange = (selected) => {\n    console.log(selected)\n    // setSelectedType(selected)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1 className=\"App_title\">Covid-19 Tracker</h1>\n        <nav className=\"App-nav\">\n          <Searchbox \n            searchChange={onSearchChange} \n            filteredCountries={filteredCountries}\n            selectChange={onSelectedCountryChange}/>\n          <DropMenu \n            countryNames={countriesNames} \n            selectedCountry={selectedCountry} \n            selectChange={onSelectedCountryChange}/>\n          <DataType\n            selectedType={selectedType}\n            selectedTypeChange={onSelectedTypeChange} />\n        </nav>\n      </header>\n      {/* <section className=\"left\">\n        <Map />\n        <CountrySummary />\n      </section>\n      <section className=\"right\">\n        <CountriesList />\n      </section> */}\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\Searchbox.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\DropMenu.jsx",[],"C:\\Users\\hoops\\Desktop\\Code\\Portfolio Projects\\covid_tracker\\src\\Components\\DataType.jsx",[],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":10,"column":10,"nodeType":"38","messageId":"39","endLine":10,"endColumn":19},{"ruleId":"36","severity":1,"message":"40","line":14,"column":24,"nodeType":"38","messageId":"39","endLine":14,"endColumn":39},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'worldData' is assigned a value but never used.","Identifier","unusedVar","'setSelectedType' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]